# Arquivo de configuração de ApiScrapper
#
# -= Regras =-
# * Linhas que começam com '#' são considerados comentários.
# * Caso esse arquivo exista, ele DEVE conter os parâmetros:
#     1. enderecoBase
#     2. rota
#     3. bearer
# * Os parâmetros devem obedecer a seguinte formatação <nome>: <valor1> [<valor2> ... <valorn>]
# * Os parâmetros podem estar em qualquer ordem.
# 
#
# -= 1. enderecoBase =-
# URL completa do endereço base da API.
#
# 
# -= 2. rota =-
# Adicione quantas rotas quiser.
# Toda rota deve iniciar com o <nome> rota.
# Toda rota tem obrigatoriamente dois valores
#   - <valor1> é o método HTTP a ser usado (somente GET e PATCH são suportados até agora).
#   - <valor2> é o recurso da rota
# Caso uma rota tenha um id, adicione '/{id}' ao final da rota.
#   - Um <valor3> do tipo GUID pode ser adicionado quando se tem um id (fortemente recomendado).
#   - Caso não especifique o id, o programa irá TENTAR achar um pra utilizar (pode e provavelmente vai dar errado).
#
# ATENÇÃO: Caso uma rota precise de um corpo (body, payload) JSON, basta adicionar o conteúdo JSON logo abaixo da rota,
#          iniciando o JSON com uma linha ontendo '{' e finalizando com uma linha contendo '}'.
#
#
# -= 3. bearer =-
# É o bearer token necessário para a autenticação do usuário na requisição (futuramente será obtido automaticamente).
#
#
# Abaixo, está um exemplo de configuração válida que utiliza todos os argumentos e todos seus valores.


# enderecoBase: https://aws-tst.localiza.dev/assistencia-core-netcore
enderecoBase: https://www.google.com

rota: GET /search?q=apiscrapping
# rota: GET /casos
# rota: GET /casos/{id} 1f4d7324-7df7-4b2c-66a4-08db3b54214a
# rota: PATCH /casos/editar/{id} 1f4d7324-7df7-4b2c-66a4-08db3b54214a
# 
# rota: GET /local
# rota: GET /local/{id} 9c4f2f6c-fb20-407d-c627-08db3618bc71
# {
#   "etapa": "Acionamento"
# }

# bearer: seu-bearer-token-aqui
